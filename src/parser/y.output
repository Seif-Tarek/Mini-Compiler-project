Terminals unused in grammar

   TOKEN_Atba3


Grammar

    0 $accept: line $end

    1 line: assignment STATEMENT_TERMINATOR_TOKEN
    2     | exit_command STATEMENT_TERMINATOR_TOKEN
    3     | declaration STATEMENT_TERMINATOR_TOKEN
    4     | line declaration STATEMENT_TERMINATOR_TOKEN
    5     | line assignment STATEMENT_TERMINATOR_TOKEN
    6     | line for_statement
    7     | for_statement
    8     | line if_statement
    9     | if_statement
   10     | line switch_statement
   11     | switch_statement
   12     | line while_statement
   13     | while_statement
   14     | line repeat_statement
   15     | repeat_statement
   16     | line exit_command STATEMENT_TERMINATOR_TOKEN
   17     | STATEMENT_TERMINATOR_TOKEN
   18     | line expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   20     | double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN

   21 declaration: data_type IDENTIFIER_TOKEN
   22            | data_type assignment
   23            | CONSTANT_TOKEN data_type assignment

   24 data_type: Rakam
   25          | TOKEN_3ashry
   26          | TOKEN_Boolean
   27          | TOKEN_Harf
   28          | TOKEN_Hroof

   29 assignment: IDENTIFIER_TOKEN EQUAL_SIGN expbitwise
   30           | IDENTIFIER_TOKEN EQUAL_SIGN double_value_expAddSubtract
   31           | IDENTIFIER_TOKEN EQUAL_SIGN Bexp1
   32           | IDENTIFIER_TOKEN EQUAL_SIGN string_value_assignment

   33 string_value_assignment: STRING_VALUE

   34 $@1: /* empty */

   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp ')' SCOPE_START_TOKEN $@1 line SCOPE_END_TOKEN

   36 $@2: /* empty */

   37 if_statement: if_statement ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN $@2 line SCOPE_END_TOKEN

   38 $@3: /* empty */

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

   40 $@4: /* empty */

   41 case_statement: case_statement '(' term ')' SCOPE_START_TOKEN $@4 line SCOPE_END_TOKEN

   42 $@5: /* empty */

   43 case_statement: '(' term ')' SCOPE_START_TOKEN $@5 line SCOPE_END_TOKEN

   44 for_iterator: assignment
   45             | declaration

   46 $@6: /* empty */

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

   48 $@7: /* empty */

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN

   50 $@8: /* empty */

   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' STATEMENT_TERMINATOR_TOKEN

   52 expbitwise: expbitwise '|' exp
   53           | expbitwise '&' exp
   54           | expbitwise '^' exp
   55           | exp

   56 exp: expAddSubtract
   57    | exp SHIFT_LEFT expAddSubtract
   58    | exp SHIFT_RIGHT expAddSubtract

   59 expAddSubtract: component
   60               | expAddSubtract '+' component
   61               | expAddSubtract '-' component

   62 double_value_expAddSubtract: double_value_expAddSubtract '+' double_value_component
   63                            | double_value_expAddSubtract '-' double_value_component
   64                            | double_value_component

   65 component: component '*' factor
   66          | component '/' factor
   67          | factor

   68 double_value_component: double_value_component '*' double_value_factor
   69                       | double_value_component '/' double_value_factor
   70                       | double_value_factor

   71 factor: '(' expbitwise ')'
   72       | '-' factor
   73       | EXP_NOT factor
   74       | term

   75 double_value_factor: '(' double_value_expAddSubtract ')'
   76                    | double_value_term
   77                    | '-' double_value_factor

   78 term: LONG_INTEGER
   79     | CHARACTER_VALUE
   80     | TrueFalse
   81     | IDENTIFIER_TOKEN

   82 double_value_term: DOUBE_FLOATING_POINT

   83 Bexp: exp '>' exp
   84     | exp GREATER_THAN_EQUAL exp
   85     | exp '<' exp
   86     | exp LESS_THAN_EQUAL exp
   87     | exp EQUAL_EQUAL exp
   88     | exp NOT_EQUAL exp
   89     | double_value_expAddSubtract '>' double_value_expAddSubtract
   90     | double_value_expAddSubtract GREATER_THAN_EQUAL double_value_expAddSubtract
   91     | double_value_expAddSubtract '<' double_value_expAddSubtract
   92     | double_value_expAddSubtract LESS_THAN_EQUAL double_value_expAddSubtract
   93     | double_value_expAddSubtract EQUAL_EQUAL double_value_expAddSubtract
   94     | double_value_expAddSubtract NOT_EQUAL double_value_expAddSubtract

   95 Bexp1: Bexp1 OR Bexpand
   96      | Bexpand

   97 Bexpand: Bexpand AND Bexpbracket
   98        | Bexpbracket

   99 Bexpbracket: '(' Bexp1 ')'
  100            | NOT Bexpbracket
  101            | Bexp


Terminals, with rules where they appear

$end (0) 0
'&' (38) 53
'(' (40) 35 39 41 43 47 49 51 71 75 99
')' (41) 35 39 41 43 47 49 51 71 75 99
'*' (42) 65 68
'+' (43) 60 62
'-' (45) 61 63 72 77
'/' (47) 66 69
':' (58) 39
'<' (60) 85 91
'>' (62) 83 89
'^' (94) 54
'|' (124) 52
error (256)
exit_command (258) 2 16
Rakam (259) 24
TOKEN_Hroof (260) 28
TOKEN_3ashry (261) 25
TOKEN_Harf (262) 27
TOKEN_Boolean (263) 26
CONSTANT_TOKEN (264) 23
TOKEN_Atba3 (265)
LONG_INTEGER (266) 78
DOUBE_FLOATING_POINT (267) 82
STRING_VALUE (268) 33
CHARACTER_VALUE (269) 79
TrueFalse (270) 80
SCOPE_START_TOKEN (271) 35 37 41 43 47 49
SCOPE_END_TOKEN (272) 35 37 41 43 47 49
STATEMENT_TERMINATOR_TOKEN (273) 1 2 3 4 5 16 17 18 19 20 47 51
IF_STATEMENT_TOKEN (274) 35
ELSE_STATEMENT_TOKEN (275) 37
SWITCH_CASE_BEGINNING_TOKEN (276) 39
SWITCH_CASE_START_CASES_TOKEN (277) 39
SWITCH_CASE_END_CASES_TOKEN (278) 39
SWITCH_DEFAULT_CASE_BEGINNING_TOKEN (279) 39
FOR_LOOP_STATMENT_TOKEN (280) 47
WHILE_LOOP_STATEMENT_TOKEN (281) 49 51
DO_STATEMENT_TOKEN (282) 51
IDENTIFIER_TOKEN (283) 21 29 30 31 32 39 81
OR (284) 95
AND (285) 97
NOT (286) 100
EQUAL_SIGN (287) 29 30 31 32
EXP_NOT (288) 73
SHIFT_LEFT (289) 57
SHIFT_RIGHT (290) 58
GREATER_THAN_EQUAL (291) 84 90
LESS_THAN_EQUAL (292) 86 92
EQUAL_EQUAL (293) 87 93
NOT_EQUAL (294) 88 94


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
line (53)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right:
    0 4 5 6 8 10 12 14 16 18 19 35 37 39 41 43 47 49 51
declaration (54)
    on left: 21 22 23, on right: 3 4 45
data_type (55)
    on left: 24 25 26 27 28, on right: 21 22 23
assignment (56)
    on left: 29 30 31 32, on right: 1 5 22 23 44 47
string_value_assignment (57)
    on left: 33, on right: 32
if_statement (58)
    on left: 35 37, on right: 8 9 37
$@1 (59)
    on left: 34, on right: 35
$@2 (60)
    on left: 36, on right: 37
switch_statement (61)
    on left: 39, on right: 10 11
$@3 (62)
    on left: 38, on right: 39
case_statement (63)
    on left: 41 43, on right: 39 41
$@4 (64)
    on left: 40, on right: 41
$@5 (65)
    on left: 42, on right: 43
for_iterator (66)
    on left: 44 45, on right: 47
for_statement (67)
    on left: 47, on right: 6 7
$@6 (68)
    on left: 46, on right: 47
while_statement (69)
    on left: 49, on right: 12 13
$@7 (70)
    on left: 48, on right: 49
repeat_statement (71)
    on left: 51, on right: 14 15
$@8 (72)
    on left: 50, on right: 51
expbitwise (73)
    on left: 52 53 54 55, on right: 18 29 52 53 54 71
exp (74)
    on left: 56 57 58, on right: 52 53 54 55 57 58 83 84 85 86 87 88
expAddSubtract (75)
    on left: 59 60 61, on right: 56 57 58 60 61
double_value_expAddSubtract (76)
    on left: 62 63 64, on right: 19 20 30 62 63 75 89 90 91 92 93 94
component (77)
    on left: 65 66 67, on right: 59 60 61 65 66
double_value_component (78)
    on left: 68 69 70, on right: 62 63 64 68 69
factor (79)
    on left: 71 72 73 74, on right: 65 66 67 72 73
double_value_factor (80)
    on left: 75 76 77, on right: 68 69 70 77
term (81)
    on left: 78 79 80 81, on right: 41 43 74
double_value_term (82)
    on left: 82, on right: 76
Bexp (83)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94, on right: 35 101
Bexp1 (84)
    on left: 95 96, on right: 31 47 49 51 95 99
Bexpand (85)
    on left: 97 98, on right: 95 96 97
Bexpbracket (86)
    on left: 99 100 101, on right: 97 98 100


state 0

    0 $accept: . line $end

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 18
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 1

    2 line: exit_command . STATEMENT_TERMINATOR_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 31


state 2

   24 data_type: Rakam .

    $default  reduce using rule 24 (data_type)


state 3

   28 data_type: TOKEN_Hroof .

    $default  reduce using rule 28 (data_type)


state 4

   25 data_type: TOKEN_3ashry .

    $default  reduce using rule 25 (data_type)


state 5

   27 data_type: TOKEN_Harf .

    $default  reduce using rule 27 (data_type)


state 6

   26 data_type: TOKEN_Boolean .

    $default  reduce using rule 26 (data_type)


state 7

   23 declaration: CONSTANT_TOKEN . data_type assignment

    Rakam          shift, and go to state 2
    TOKEN_Hroof    shift, and go to state 3
    TOKEN_3ashry   shift, and go to state 4
    TOKEN_Harf     shift, and go to state 5
    TOKEN_Boolean  shift, and go to state 6

    data_type  go to state 32


state 8

   82 double_value_term: DOUBE_FLOATING_POINT .

    $default  reduce using rule 82 (double_value_term)


state 9

   17 line: STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 17 (line)


state 10

   35 if_statement: IF_STATEMENT_TOKEN . '(' Bexp ')' SCOPE_START_TOKEN $@1 line SCOPE_END_TOKEN

    '('  shift, and go to state 33


state 11

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN . '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

    '('  shift, and go to state 34


state 12

   47 for_statement: FOR_LOOP_STATMENT_TOKEN . '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    '('  shift, and go to state 35


state 13

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN . '(' Bexp1 ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN

    '('  shift, and go to state 36


state 14

   51 repeat_statement: DO_STATEMENT_TOKEN . $@8 line WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' STATEMENT_TERMINATOR_TOKEN

    $default  reduce using rule 50 ($@8)

    $@8  go to state 37


state 15

   29 assignment: IDENTIFIER_TOKEN . EQUAL_SIGN expbitwise
   30           | IDENTIFIER_TOKEN . EQUAL_SIGN double_value_expAddSubtract
   31           | IDENTIFIER_TOKEN . EQUAL_SIGN Bexp1
   32           | IDENTIFIER_TOKEN . EQUAL_SIGN string_value_assignment

    EQUAL_SIGN  shift, and go to state 38


state 16

   75 double_value_factor: '(' . double_value_expAddSubtract ')'

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 39
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 17

   77 double_value_factor: '-' . double_value_factor

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_factor  go to state 40
    double_value_term    go to state 30


state 18

    0 $accept: line . $end
    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN

    $end                         shift, and go to state 41
    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 19

    3 line: declaration . STATEMENT_TERMINATOR_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 64


state 20

   21 declaration: data_type . IDENTIFIER_TOKEN
   22            | data_type . assignment

    IDENTIFIER_TOKEN  shift, and go to state 65

    assignment  go to state 66


state 21

    1 line: assignment . STATEMENT_TERMINATOR_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 67


state 22

    9 line: if_statement .
   37 if_statement: if_statement . ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN $@2 line SCOPE_END_TOKEN

    ELSE_STATEMENT_TOKEN  shift, and go to state 68

    $default  reduce using rule 9 (line)


state 23

   11 line: switch_statement .

    $default  reduce using rule 11 (line)


state 24

    7 line: for_statement .

    $default  reduce using rule 7 (line)


state 25

   13 line: while_statement .

    $default  reduce using rule 13 (line)


state 26

   15 line: repeat_statement .

    $default  reduce using rule 15 (line)


state 27

   20 line: double_value_expAddSubtract . STATEMENT_TERMINATOR_TOKEN
   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 69
    '+'                         shift, and go to state 70
    '-'                         shift, and go to state 71


state 28

   64 double_value_expAddSubtract: double_value_component .
   68 double_value_component: double_value_component . '*' double_value_factor
   69                       | double_value_component . '/' double_value_factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 64 (double_value_expAddSubtract)


state 29

   70 double_value_component: double_value_factor .

    $default  reduce using rule 70 (double_value_component)


state 30

   76 double_value_factor: double_value_term .

    $default  reduce using rule 76 (double_value_factor)


state 31

    2 line: exit_command STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 2 (line)


state 32

   23 declaration: CONSTANT_TOKEN data_type . assignment

    IDENTIFIER_TOKEN  shift, and go to state 15

    assignment  go to state 74


state 33

   35 if_statement: IF_STATEMENT_TOKEN '(' . Bexp ')' SCOPE_START_TOKEN $@1 line SCOPE_END_TOKEN

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 48
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 78


state 34

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' . IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 79


state 35

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' . for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    Rakam             shift, and go to state 2
    TOKEN_Hroof       shift, and go to state 3
    TOKEN_3ashry      shift, and go to state 4
    TOKEN_Harf        shift, and go to state 5
    TOKEN_Boolean     shift, and go to state 6
    CONSTANT_TOKEN    shift, and go to state 7
    IDENTIFIER_TOKEN  shift, and go to state 15

    declaration   go to state 80
    data_type     go to state 20
    assignment    go to state 81
    for_iterator  go to state 82


state 36

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' . Bexp1 ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexp1                        go to state 86
    Bexpand                      go to state 87
    Bexpbracket                  go to state 88


state 37

   51 repeat_statement: DO_STATEMENT_TOKEN $@8 . line WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' STATEMENT_TERMINATOR_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 89
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 38

   29 assignment: IDENTIFIER_TOKEN EQUAL_SIGN . expbitwise
   30           | IDENTIFIER_TOKEN EQUAL_SIGN . double_value_expAddSubtract
   31           | IDENTIFIER_TOKEN EQUAL_SIGN . Bexp1
   32           | IDENTIFIER_TOKEN EQUAL_SIGN . string_value_assignment

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    STRING_VALUE          shift, and go to state 90
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    string_value_assignment      go to state 91
    expbitwise                   go to state 92
    exp                          go to state 93
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 94
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexp1                        go to state 95
    Bexpand                      go to state 87
    Bexpbracket                  go to state 88


state 39

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   75 double_value_factor: '(' double_value_expAddSubtract . ')'

    ')'  shift, and go to state 96
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71


state 40

   77 double_value_factor: '-' double_value_factor .

    $default  reduce using rule 77 (double_value_factor)


state 41

    0 $accept: line $end .

    $default  accept


state 42

   16 line: line exit_command . STATEMENT_TERMINATOR_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 97


state 43

   78 term: LONG_INTEGER .

    $default  reduce using rule 78 (term)


state 44

   79 term: CHARACTER_VALUE .

    $default  reduce using rule 79 (term)


state 45

   80 term: TrueFalse .

    $default  reduce using rule 80 (term)


state 46

   29 assignment: IDENTIFIER_TOKEN . EQUAL_SIGN expbitwise
   30           | IDENTIFIER_TOKEN . EQUAL_SIGN double_value_expAddSubtract
   31           | IDENTIFIER_TOKEN . EQUAL_SIGN Bexp1
   32           | IDENTIFIER_TOKEN . EQUAL_SIGN string_value_assignment
   81 term: IDENTIFIER_TOKEN .

    EQUAL_SIGN  shift, and go to state 38

    $default  reduce using rule 81 (term)


state 47

   73 factor: EXP_NOT . factor

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    factor  go to state 100
    term    go to state 63


state 48

   71 factor: '(' . expbitwise ')'
   75 double_value_factor: '(' . double_value_expAddSubtract ')'

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 48
    '-'                   shift, and go to state 49

    expbitwise                   go to state 101
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 39
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 49

   72 factor: '-' . factor
   77 double_value_factor: '-' . double_value_factor

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 48
    '-'                   shift, and go to state 49

    factor               go to state 102
    double_value_factor  go to state 40
    term                 go to state 63
    double_value_term    go to state 30


state 50

    4 line: line declaration . STATEMENT_TERMINATOR_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 103


state 51

    5 line: line assignment . STATEMENT_TERMINATOR_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 104


state 52

    8 line: line if_statement .
   37 if_statement: if_statement . ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN $@2 line SCOPE_END_TOKEN

    ELSE_STATEMENT_TOKEN  shift, and go to state 68

    $default  reduce using rule 8 (line)


state 53

   10 line: line switch_statement .

    $default  reduce using rule 10 (line)


state 54

    6 line: line for_statement .

    $default  reduce using rule 6 (line)


state 55

   12 line: line while_statement .

    $default  reduce using rule 12 (line)


state 56

   14 line: line repeat_statement .

    $default  reduce using rule 14 (line)


state 57

   18 line: line expbitwise . STATEMENT_TERMINATOR_TOKEN
   52 expbitwise: expbitwise . '|' exp
   53           | expbitwise . '&' exp
   54           | expbitwise . '^' exp

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 105
    '|'                         shift, and go to state 106
    '&'                         shift, and go to state 107
    '^'                         shift, and go to state 108


state 58

   55 expbitwise: exp .
   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 55 (expbitwise)


state 59

   56 exp: expAddSubtract .
   60 expAddSubtract: expAddSubtract . '+' component
   61               | expAddSubtract . '-' component

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112

    $default  reduce using rule 56 (exp)


state 60

   19 line: line double_value_expAddSubtract . STATEMENT_TERMINATOR_TOKEN
   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 113
    '+'                         shift, and go to state 70
    '-'                         shift, and go to state 71


state 61

   59 expAddSubtract: component .
   65 component: component . '*' factor
   66          | component . '/' factor

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115

    $default  reduce using rule 59 (expAddSubtract)


state 62

   67 component: factor .

    $default  reduce using rule 67 (component)


state 63

   74 factor: term .

    $default  reduce using rule 74 (factor)


state 64

    3 line: declaration STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 3 (line)


state 65

   21 declaration: data_type IDENTIFIER_TOKEN .
   29 assignment: IDENTIFIER_TOKEN . EQUAL_SIGN expbitwise
   30           | IDENTIFIER_TOKEN . EQUAL_SIGN double_value_expAddSubtract
   31           | IDENTIFIER_TOKEN . EQUAL_SIGN Bexp1
   32           | IDENTIFIER_TOKEN . EQUAL_SIGN string_value_assignment

    EQUAL_SIGN  shift, and go to state 38

    $default  reduce using rule 21 (declaration)


state 66

   22 declaration: data_type assignment .

    $default  reduce using rule 22 (declaration)


state 67

    1 line: assignment STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 1 (line)


state 68

   37 if_statement: if_statement ELSE_STATEMENT_TOKEN . SCOPE_START_TOKEN $@2 line SCOPE_END_TOKEN

    SCOPE_START_TOKEN  shift, and go to state 116


state 69

   20 line: double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 20 (line)


state 70

   62 double_value_expAddSubtract: double_value_expAddSubtract '+' . double_value_component

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_component  go to state 117
    double_value_factor     go to state 29
    double_value_term       go to state 30


state 71

   63 double_value_expAddSubtract: double_value_expAddSubtract '-' . double_value_component

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_component  go to state 118
    double_value_factor     go to state 29
    double_value_term       go to state 30


state 72

   68 double_value_component: double_value_component '*' . double_value_factor

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_factor  go to state 119
    double_value_term    go to state 30


state 73

   69 double_value_component: double_value_component '/' . double_value_factor

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_factor  go to state 120
    double_value_term    go to state 30


state 74

   23 declaration: CONSTANT_TOKEN data_type assignment .

    $default  reduce using rule 23 (declaration)


state 75

   81 term: IDENTIFIER_TOKEN .

    $default  reduce using rule 81 (term)


state 76

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   83 Bexp: exp . '>' exp
   84     | exp . GREATER_THAN_EQUAL exp
   85     | exp . '<' exp
   86     | exp . LESS_THAN_EQUAL exp
   87     | exp . EQUAL_EQUAL exp
   88     | exp . NOT_EQUAL exp

    SHIFT_LEFT          shift, and go to state 109
    SHIFT_RIGHT         shift, and go to state 110
    GREATER_THAN_EQUAL  shift, and go to state 121
    LESS_THAN_EQUAL     shift, and go to state 122
    EQUAL_EQUAL         shift, and go to state 123
    NOT_EQUAL           shift, and go to state 124
    '>'                 shift, and go to state 125
    '<'                 shift, and go to state 126


state 77

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   89 Bexp: double_value_expAddSubtract . '>' double_value_expAddSubtract
   90     | double_value_expAddSubtract . GREATER_THAN_EQUAL double_value_expAddSubtract
   91     | double_value_expAddSubtract . '<' double_value_expAddSubtract
   92     | double_value_expAddSubtract . LESS_THAN_EQUAL double_value_expAddSubtract
   93     | double_value_expAddSubtract . EQUAL_EQUAL double_value_expAddSubtract
   94     | double_value_expAddSubtract . NOT_EQUAL double_value_expAddSubtract

    GREATER_THAN_EQUAL  shift, and go to state 127
    LESS_THAN_EQUAL     shift, and go to state 128
    EQUAL_EQUAL         shift, and go to state 129
    NOT_EQUAL           shift, and go to state 130
    '+'                 shift, and go to state 70
    '-'                 shift, and go to state 71
    '>'                 shift, and go to state 131
    '<'                 shift, and go to state 132


state 78

   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp . ')' SCOPE_START_TOKEN $@1 line SCOPE_END_TOKEN

    ')'  shift, and go to state 133


state 79

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN . ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

    ')'  shift, and go to state 134


state 80

   45 for_iterator: declaration .

    $default  reduce using rule 45 (for_iterator)


state 81

   44 for_iterator: assignment .

    $default  reduce using rule 44 (for_iterator)


state 82

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator . STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 135


state 83

  100 Bexpbracket: NOT . Bexpbracket

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexpbracket                  go to state 136


state 84

   71 factor: '(' . expbitwise ')'
   75 double_value_factor: '(' . double_value_expAddSubtract ')'
   99 Bexpbracket: '(' . Bexp1 ')'

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    expbitwise                   go to state 101
    exp                          go to state 93
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 137
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexp1                        go to state 138
    Bexpand                      go to state 87
    Bexpbracket                  go to state 88


state 85

  101 Bexpbracket: Bexp .

    $default  reduce using rule 101 (Bexpbracket)


state 86

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 . ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN
   95 Bexp1: Bexp1 . OR Bexpand

    OR   shift, and go to state 139
    ')'  shift, and go to state 140


state 87

   96 Bexp1: Bexpand .
   97 Bexpand: Bexpand . AND Bexpbracket

    AND  shift, and go to state 141

    $default  reduce using rule 96 (Bexp1)


state 88

   98 Bexpand: Bexpbracket .

    $default  reduce using rule 98 (Bexpand)


state 89

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line . WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' STATEMENT_TERMINATOR_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 142
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 90

   33 string_value_assignment: STRING_VALUE .

    $default  reduce using rule 33 (string_value_assignment)


state 91

   32 assignment: IDENTIFIER_TOKEN EQUAL_SIGN string_value_assignment .

    $default  reduce using rule 32 (assignment)


state 92

   29 assignment: IDENTIFIER_TOKEN EQUAL_SIGN expbitwise .
   52 expbitwise: expbitwise . '|' exp
   53           | expbitwise . '&' exp
   54           | expbitwise . '^' exp

    '|'  shift, and go to state 106
    '&'  shift, and go to state 107
    '^'  shift, and go to state 108

    $default  reduce using rule 29 (assignment)


state 93

   55 expbitwise: exp .
   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   83 Bexp: exp . '>' exp
   84     | exp . GREATER_THAN_EQUAL exp
   85     | exp . '<' exp
   86     | exp . LESS_THAN_EQUAL exp
   87     | exp . EQUAL_EQUAL exp
   88     | exp . NOT_EQUAL exp

    SHIFT_LEFT          shift, and go to state 109
    SHIFT_RIGHT         shift, and go to state 110
    GREATER_THAN_EQUAL  shift, and go to state 121
    LESS_THAN_EQUAL     shift, and go to state 122
    EQUAL_EQUAL         shift, and go to state 123
    NOT_EQUAL           shift, and go to state 124
    '>'                 shift, and go to state 125
    '<'                 shift, and go to state 126

    $default  reduce using rule 55 (expbitwise)


state 94

   30 assignment: IDENTIFIER_TOKEN EQUAL_SIGN double_value_expAddSubtract .
   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   89 Bexp: double_value_expAddSubtract . '>' double_value_expAddSubtract
   90     | double_value_expAddSubtract . GREATER_THAN_EQUAL double_value_expAddSubtract
   91     | double_value_expAddSubtract . '<' double_value_expAddSubtract
   92     | double_value_expAddSubtract . LESS_THAN_EQUAL double_value_expAddSubtract
   93     | double_value_expAddSubtract . EQUAL_EQUAL double_value_expAddSubtract
   94     | double_value_expAddSubtract . NOT_EQUAL double_value_expAddSubtract

    GREATER_THAN_EQUAL  shift, and go to state 127
    LESS_THAN_EQUAL     shift, and go to state 128
    EQUAL_EQUAL         shift, and go to state 129
    NOT_EQUAL           shift, and go to state 130
    '+'                 shift, and go to state 70
    '-'                 shift, and go to state 71
    '>'                 shift, and go to state 131
    '<'                 shift, and go to state 132

    $default  reduce using rule 30 (assignment)


state 95

   31 assignment: IDENTIFIER_TOKEN EQUAL_SIGN Bexp1 .
   95 Bexp1: Bexp1 . OR Bexpand

    OR  shift, and go to state 139

    $default  reduce using rule 31 (assignment)


state 96

   75 double_value_factor: '(' double_value_expAddSubtract ')' .

    $default  reduce using rule 75 (double_value_factor)


state 97

   16 line: line exit_command STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 16 (line)


state 98

   71 factor: '(' . expbitwise ')'

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    expbitwise      go to state 101
    exp             go to state 58
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 99

   72 factor: '-' . factor

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    factor  go to state 102
    term    go to state 63


state 100

   73 factor: EXP_NOT factor .

    $default  reduce using rule 73 (factor)


state 101

   52 expbitwise: expbitwise . '|' exp
   53           | expbitwise . '&' exp
   54           | expbitwise . '^' exp
   71 factor: '(' expbitwise . ')'

    ')'  shift, and go to state 143
    '|'  shift, and go to state 106
    '&'  shift, and go to state 107
    '^'  shift, and go to state 108


state 102

   72 factor: '-' factor .

    $default  reduce using rule 72 (factor)


state 103

    4 line: line declaration STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 4 (line)


state 104

    5 line: line assignment STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 5 (line)


state 105

   18 line: line expbitwise STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 18 (line)


state 106

   52 expbitwise: expbitwise '|' . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 144
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 107

   53 expbitwise: expbitwise '&' . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 145
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 108

   54 expbitwise: expbitwise '^' . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 146
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 109

   57 exp: exp SHIFT_LEFT . expAddSubtract

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    expAddSubtract  go to state 147
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 110

   58 exp: exp SHIFT_RIGHT . expAddSubtract

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    expAddSubtract  go to state 148
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 111

   60 expAddSubtract: expAddSubtract '+' . component

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    component  go to state 149
    factor     go to state 62
    term       go to state 63


state 112

   61 expAddSubtract: expAddSubtract '-' . component

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    component  go to state 150
    factor     go to state 62
    term       go to state 63


state 113

   19 line: line double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 19 (line)


state 114

   65 component: component '*' . factor

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    factor  go to state 151
    term    go to state 63


state 115

   66 component: component '/' . factor

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    factor  go to state 152
    term    go to state 63


state 116

   37 if_statement: if_statement ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN . $@2 line SCOPE_END_TOKEN

    $default  reduce using rule 36 ($@2)

    $@2  go to state 153


state 117

   62 double_value_expAddSubtract: double_value_expAddSubtract '+' double_value_component .
   68 double_value_component: double_value_component . '*' double_value_factor
   69                       | double_value_component . '/' double_value_factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 62 (double_value_expAddSubtract)


state 118

   63 double_value_expAddSubtract: double_value_expAddSubtract '-' double_value_component .
   68 double_value_component: double_value_component . '*' double_value_factor
   69                       | double_value_component . '/' double_value_factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 63 (double_value_expAddSubtract)


state 119

   68 double_value_component: double_value_component '*' double_value_factor .

    $default  reduce using rule 68 (double_value_component)


state 120

   69 double_value_component: double_value_component '/' double_value_factor .

    $default  reduce using rule 69 (double_value_component)


state 121

   84 Bexp: exp GREATER_THAN_EQUAL . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 154
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 122

   86 Bexp: exp LESS_THAN_EQUAL . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 155
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 123

   87 Bexp: exp EQUAL_EQUAL . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 156
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 124

   88 Bexp: exp NOT_EQUAL . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 157
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 125

   83 Bexp: exp '>' . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 158
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 126

   85 Bexp: exp '<' . exp

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75
    EXP_NOT           shift, and go to state 47
    '('               shift, and go to state 98
    '-'               shift, and go to state 99

    exp             go to state 159
    expAddSubtract  go to state 59
    component       go to state 61
    factor          go to state 62
    term            go to state 63


state 127

   90 Bexp: double_value_expAddSubtract GREATER_THAN_EQUAL . double_value_expAddSubtract

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 160
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 128

   92 Bexp: double_value_expAddSubtract LESS_THAN_EQUAL . double_value_expAddSubtract

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 161
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 129

   93 Bexp: double_value_expAddSubtract EQUAL_EQUAL . double_value_expAddSubtract

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 162
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 130

   94 Bexp: double_value_expAddSubtract NOT_EQUAL . double_value_expAddSubtract

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 163
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 131

   89 Bexp: double_value_expAddSubtract '>' . double_value_expAddSubtract

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 164
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 132

   91 Bexp: double_value_expAddSubtract '<' . double_value_expAddSubtract

    DOUBE_FLOATING_POINT  shift, and go to state 8
    '('                   shift, and go to state 16
    '-'                   shift, and go to state 17

    double_value_expAddSubtract  go to state 165
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 133

   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp ')' . SCOPE_START_TOKEN $@1 line SCOPE_END_TOKEN

    SCOPE_START_TOKEN  shift, and go to state 166


state 134

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' . SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

    SWITCH_CASE_START_CASES_TOKEN  shift, and go to state 167


state 135

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN . Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexp1                        go to state 168
    Bexpand                      go to state 87
    Bexpbracket                  go to state 88


state 136

  100 Bexpbracket: NOT Bexpbracket .

    $default  reduce using rule 100 (Bexpbracket)


state 137

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   75 double_value_factor: '(' double_value_expAddSubtract . ')'
   89 Bexp: double_value_expAddSubtract . '>' double_value_expAddSubtract
   90     | double_value_expAddSubtract . GREATER_THAN_EQUAL double_value_expAddSubtract
   91     | double_value_expAddSubtract . '<' double_value_expAddSubtract
   92     | double_value_expAddSubtract . LESS_THAN_EQUAL double_value_expAddSubtract
   93     | double_value_expAddSubtract . EQUAL_EQUAL double_value_expAddSubtract
   94     | double_value_expAddSubtract . NOT_EQUAL double_value_expAddSubtract

    GREATER_THAN_EQUAL  shift, and go to state 127
    LESS_THAN_EQUAL     shift, and go to state 128
    EQUAL_EQUAL         shift, and go to state 129
    NOT_EQUAL           shift, and go to state 130
    ')'                 shift, and go to state 96
    '+'                 shift, and go to state 70
    '-'                 shift, and go to state 71
    '>'                 shift, and go to state 131
    '<'                 shift, and go to state 132


state 138

   95 Bexp1: Bexp1 . OR Bexpand
   99 Bexpbracket: '(' Bexp1 . ')'

    OR   shift, and go to state 139
    ')'  shift, and go to state 169


state 139

   95 Bexp1: Bexp1 OR . Bexpand

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexpand                      go to state 170
    Bexpbracket                  go to state 88


state 140

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' . SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN

    SCOPE_START_TOKEN  shift, and go to state 171


state 141

   97 Bexpand: Bexpand AND . Bexpbracket

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexpbracket                  go to state 172


state 142

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN . '(' Bexp1 ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN
   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line WHILE_LOOP_STATEMENT_TOKEN . '(' Bexp1 ')' STATEMENT_TERMINATOR_TOKEN

    '('  shift, and go to state 173


state 143

   71 factor: '(' expbitwise ')' .

    $default  reduce using rule 71 (factor)


state 144

   52 expbitwise: expbitwise '|' exp .
   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 52 (expbitwise)


state 145

   53 expbitwise: expbitwise '&' exp .
   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 53 (expbitwise)


state 146

   54 expbitwise: expbitwise '^' exp .
   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 54 (expbitwise)


state 147

   57 exp: exp SHIFT_LEFT expAddSubtract .
   60 expAddSubtract: expAddSubtract . '+' component
   61               | expAddSubtract . '-' component

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112

    $default  reduce using rule 57 (exp)


state 148

   58 exp: exp SHIFT_RIGHT expAddSubtract .
   60 expAddSubtract: expAddSubtract . '+' component
   61               | expAddSubtract . '-' component

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112

    $default  reduce using rule 58 (exp)


state 149

   60 expAddSubtract: expAddSubtract '+' component .
   65 component: component . '*' factor
   66          | component . '/' factor

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115

    $default  reduce using rule 60 (expAddSubtract)


state 150

   61 expAddSubtract: expAddSubtract '-' component .
   65 component: component . '*' factor
   66          | component . '/' factor

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115

    $default  reduce using rule 61 (expAddSubtract)


state 151

   65 component: component '*' factor .

    $default  reduce using rule 65 (component)


state 152

   66 component: component '/' factor .

    $default  reduce using rule 66 (component)


state 153

   37 if_statement: if_statement ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN $@2 . line SCOPE_END_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 174
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 154

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   84 Bexp: exp GREATER_THAN_EQUAL exp .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 84 (Bexp)


state 155

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   86 Bexp: exp LESS_THAN_EQUAL exp .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 86 (Bexp)


state 156

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   87 Bexp: exp EQUAL_EQUAL exp .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 87 (Bexp)


state 157

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   88 Bexp: exp NOT_EQUAL exp .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 88 (Bexp)


state 158

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   83 Bexp: exp '>' exp .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 83 (Bexp)


state 159

   57 exp: exp . SHIFT_LEFT expAddSubtract
   58    | exp . SHIFT_RIGHT expAddSubtract
   85 Bexp: exp '<' exp .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 85 (Bexp)


state 160

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   90 Bexp: double_value_expAddSubtract GREATER_THAN_EQUAL double_value_expAddSubtract .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 90 (Bexp)


state 161

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   92 Bexp: double_value_expAddSubtract LESS_THAN_EQUAL double_value_expAddSubtract .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 92 (Bexp)


state 162

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   93 Bexp: double_value_expAddSubtract EQUAL_EQUAL double_value_expAddSubtract .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 93 (Bexp)


state 163

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   94 Bexp: double_value_expAddSubtract NOT_EQUAL double_value_expAddSubtract .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 94 (Bexp)


state 164

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   89 Bexp: double_value_expAddSubtract '>' double_value_expAddSubtract .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 89 (Bexp)


state 165

   62 double_value_expAddSubtract: double_value_expAddSubtract . '+' double_value_component
   63                            | double_value_expAddSubtract . '-' double_value_component
   91 Bexp: double_value_expAddSubtract '<' double_value_expAddSubtract .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 91 (Bexp)


state 166

   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp ')' SCOPE_START_TOKEN . $@1 line SCOPE_END_TOKEN

    $default  reduce using rule 34 ($@1)

    $@1  go to state 175


state 167

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN . ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

    ':'  shift, and go to state 176


state 168

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 . STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN
   95 Bexp1: Bexp1 . OR Bexpand

    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 177
    OR                          shift, and go to state 139


state 169

   99 Bexpbracket: '(' Bexp1 ')' .

    $default  reduce using rule 99 (Bexpbracket)


state 170

   95 Bexp1: Bexp1 OR Bexpand .
   97 Bexpand: Bexpand . AND Bexpbracket

    AND  shift, and go to state 141

    $default  reduce using rule 95 (Bexp1)


state 171

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' SCOPE_START_TOKEN . $@7 line SCOPE_END_TOKEN

    $default  reduce using rule 48 ($@7)

    $@7  go to state 178


state 172

   97 Bexpand: Bexpand AND Bexpbracket .

    $default  reduce using rule 97 (Bexpand)


state 173

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' . Bexp1 ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN
   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line WHILE_LOOP_STATEMENT_TOKEN '(' . Bexp1 ')' STATEMENT_TERMINATOR_TOKEN

    LONG_INTEGER          shift, and go to state 43
    DOUBE_FLOATING_POINT  shift, and go to state 8
    CHARACTER_VALUE       shift, and go to state 44
    TrueFalse             shift, and go to state 45
    IDENTIFIER_TOKEN      shift, and go to state 75
    NOT                   shift, and go to state 83
    EXP_NOT               shift, and go to state 47
    '('                   shift, and go to state 84
    '-'                   shift, and go to state 49

    exp                          go to state 76
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 77
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30
    Bexp                         go to state 85
    Bexp1                        go to state 179
    Bexpand                      go to state 87
    Bexpbracket                  go to state 88


state 174

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   37 if_statement: if_statement ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN $@2 line . SCOPE_END_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    SCOPE_END_TOKEN              shift, and go to state 180
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 175

   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp ')' SCOPE_START_TOKEN $@1 . line SCOPE_END_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 181
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 176

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' . case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN

    '('  shift, and go to state 182

    case_statement  go to state 183


state 177

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN . assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 15

    assignment  go to state 184


state 178

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' SCOPE_START_TOKEN $@7 . line SCOPE_END_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 185
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 179

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 . ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN
   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 . ')' STATEMENT_TERMINATOR_TOKEN
   95 Bexp1: Bexp1 . OR Bexpand

    OR   shift, and go to state 139
    ')'  shift, and go to state 186


state 180

   37 if_statement: if_statement ELSE_STATEMENT_TOKEN SCOPE_START_TOKEN $@2 line SCOPE_END_TOKEN .

    $default  reduce using rule 37 (if_statement)


state 181

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp ')' SCOPE_START_TOKEN $@1 line . SCOPE_END_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    SCOPE_END_TOKEN              shift, and go to state 187
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 182

   43 case_statement: '(' . term ')' SCOPE_START_TOKEN $@5 line SCOPE_END_TOKEN

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75

    term  go to state 188


state 183

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement . SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN
   41 case_statement: case_statement . '(' term ')' SCOPE_START_TOKEN $@4 line SCOPE_END_TOKEN

    SWITCH_DEFAULT_CASE_BEGINNING_TOKEN  shift, and go to state 189
    '('                                  shift, and go to state 190


state 184

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment . ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    ')'  shift, and go to state 191


state 185

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' SCOPE_START_TOKEN $@7 line . SCOPE_END_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    SCOPE_END_TOKEN              shift, and go to state 192
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 186

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' . SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN
   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' . STATEMENT_TERMINATOR_TOKEN

    SCOPE_START_TOKEN           shift, and go to state 171
    STATEMENT_TERMINATOR_TOKEN  shift, and go to state 193


state 187

   35 if_statement: IF_STATEMENT_TOKEN '(' Bexp ')' SCOPE_START_TOKEN $@1 line SCOPE_END_TOKEN .

    $default  reduce using rule 35 (if_statement)


state 188

   43 case_statement: '(' term . ')' SCOPE_START_TOKEN $@5 line SCOPE_END_TOKEN

    ')'  shift, and go to state 194


state 189

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN . $@3 line SWITCH_CASE_END_CASES_TOKEN

    $default  reduce using rule 38 ($@3)

    $@3  go to state 195


state 190

   41 case_statement: case_statement '(' . term ')' SCOPE_START_TOKEN $@4 line SCOPE_END_TOKEN

    LONG_INTEGER      shift, and go to state 43
    CHARACTER_VALUE   shift, and go to state 44
    TrueFalse         shift, and go to state 45
    IDENTIFIER_TOKEN  shift, and go to state 75

    term  go to state 196


state 191

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' . SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN

    SCOPE_START_TOKEN  shift, and go to state 197


state 192

   49 while_statement: WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' SCOPE_START_TOKEN $@7 line SCOPE_END_TOKEN .

    $default  reduce using rule 49 (while_statement)


state 193

   51 repeat_statement: DO_STATEMENT_TOKEN $@8 line WHILE_LOOP_STATEMENT_TOKEN '(' Bexp1 ')' STATEMENT_TERMINATOR_TOKEN .

    $default  reduce using rule 51 (repeat_statement)


state 194

   43 case_statement: '(' term ')' . SCOPE_START_TOKEN $@5 line SCOPE_END_TOKEN

    SCOPE_START_TOKEN  shift, and go to state 198


state 195

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 . line SWITCH_CASE_END_CASES_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 199
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 196

   41 case_statement: case_statement '(' term . ')' SCOPE_START_TOKEN $@4 line SCOPE_END_TOKEN

    ')'  shift, and go to state 200


state 197

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN . $@6 line SCOPE_END_TOKEN

    $default  reduce using rule 46 ($@6)

    $@6  go to state 201


state 198

   43 case_statement: '(' term ')' SCOPE_START_TOKEN . $@5 line SCOPE_END_TOKEN

    $default  reduce using rule 42 ($@5)

    $@5  go to state 202


state 199

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line . SWITCH_CASE_END_CASES_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    SWITCH_CASE_END_CASES_TOKEN  shift, and go to state 203
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 200

   41 case_statement: case_statement '(' term ')' . SCOPE_START_TOKEN $@4 line SCOPE_END_TOKEN

    SCOPE_START_TOKEN  shift, and go to state 204


state 201

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 . line SCOPE_END_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 205
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 202

   43 case_statement: '(' term ')' SCOPE_START_TOKEN $@5 . line SCOPE_END_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 206
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 203

   39 switch_statement: SWITCH_CASE_BEGINNING_TOKEN '(' IDENTIFIER_TOKEN ')' SWITCH_CASE_START_CASES_TOKEN ':' case_statement SWITCH_DEFAULT_CASE_BEGINNING_TOKEN $@3 line SWITCH_CASE_END_CASES_TOKEN .

    $default  reduce using rule 39 (switch_statement)


state 204

   41 case_statement: case_statement '(' term ')' SCOPE_START_TOKEN . $@4 line SCOPE_END_TOKEN

    $default  reduce using rule 40 ($@4)

    $@4  go to state 207


state 205

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line . SCOPE_END_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    SCOPE_END_TOKEN              shift, and go to state 208
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 206

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   43 case_statement: '(' term ')' SCOPE_START_TOKEN $@5 line . SCOPE_END_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    SCOPE_END_TOKEN              shift, and go to state 209
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 207

   41 case_statement: case_statement '(' term ')' SCOPE_START_TOKEN $@4 . line SCOPE_END_TOKEN

    exit_command                 shift, and go to state 1
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    DOUBE_FLOATING_POINT         shift, and go to state 8
    STATEMENT_TERMINATOR_TOKEN   shift, and go to state 9
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 15
    '('                          shift, and go to state 16
    '-'                          shift, and go to state 17

    line                         go to state 210
    declaration                  go to state 19
    data_type                    go to state 20
    assignment                   go to state 21
    if_statement                 go to state 22
    switch_statement             go to state 23
    for_statement                go to state 24
    while_statement              go to state 25
    repeat_statement             go to state 26
    double_value_expAddSubtract  go to state 27
    double_value_component       go to state 28
    double_value_factor          go to state 29
    double_value_term            go to state 30


state 208

   47 for_statement: FOR_LOOP_STATMENT_TOKEN '(' for_iterator STATEMENT_TERMINATOR_TOKEN Bexp1 STATEMENT_TERMINATOR_TOKEN assignment ')' SCOPE_START_TOKEN $@6 line SCOPE_END_TOKEN .

    $default  reduce using rule 47 (for_statement)


state 209

   43 case_statement: '(' term ')' SCOPE_START_TOKEN $@5 line SCOPE_END_TOKEN .

    $default  reduce using rule 43 (case_statement)


state 210

    4 line: line . declaration STATEMENT_TERMINATOR_TOKEN
    5     | line . assignment STATEMENT_TERMINATOR_TOKEN
    6     | line . for_statement
    8     | line . if_statement
   10     | line . switch_statement
   12     | line . while_statement
   14     | line . repeat_statement
   16     | line . exit_command STATEMENT_TERMINATOR_TOKEN
   18     | line . expbitwise STATEMENT_TERMINATOR_TOKEN
   19     | line . double_value_expAddSubtract STATEMENT_TERMINATOR_TOKEN
   41 case_statement: case_statement '(' term ')' SCOPE_START_TOKEN $@4 line . SCOPE_END_TOKEN

    exit_command                 shift, and go to state 42
    Rakam                        shift, and go to state 2
    TOKEN_Hroof                  shift, and go to state 3
    TOKEN_3ashry                 shift, and go to state 4
    TOKEN_Harf                   shift, and go to state 5
    TOKEN_Boolean                shift, and go to state 6
    CONSTANT_TOKEN               shift, and go to state 7
    LONG_INTEGER                 shift, and go to state 43
    DOUBE_FLOATING_POINT         shift, and go to state 8
    CHARACTER_VALUE              shift, and go to state 44
    TrueFalse                    shift, and go to state 45
    SCOPE_END_TOKEN              shift, and go to state 211
    IF_STATEMENT_TOKEN           shift, and go to state 10
    SWITCH_CASE_BEGINNING_TOKEN  shift, and go to state 11
    FOR_LOOP_STATMENT_TOKEN      shift, and go to state 12
    WHILE_LOOP_STATEMENT_TOKEN   shift, and go to state 13
    DO_STATEMENT_TOKEN           shift, and go to state 14
    IDENTIFIER_TOKEN             shift, and go to state 46
    EXP_NOT                      shift, and go to state 47
    '('                          shift, and go to state 48
    '-'                          shift, and go to state 49

    declaration                  go to state 50
    data_type                    go to state 20
    assignment                   go to state 51
    if_statement                 go to state 52
    switch_statement             go to state 53
    for_statement                go to state 54
    while_statement              go to state 55
    repeat_statement             go to state 56
    expbitwise                   go to state 57
    exp                          go to state 58
    expAddSubtract               go to state 59
    double_value_expAddSubtract  go to state 60
    component                    go to state 61
    double_value_component       go to state 28
    factor                       go to state 62
    double_value_factor          go to state 29
    term                         go to state 63
    double_value_term            go to state 30


state 211

   41 case_statement: case_statement '(' term ')' SCOPE_START_TOKEN $@4 line SCOPE_END_TOKEN .

    $default  reduce using rule 41 (case_statement)
